// test_lstm.cpp
// Test LSTM module

#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN
#include <tt/device.h>
#include <tt/exception.h>
#include <tt/index.h>
#include <tt/nn/lstm.h>
#include <tt/scalar.h>
#include <tt/shape.h>
#include <tt/tensor.h>

#include "doctest.h"
#include "test_util.h"

#include <cmath>
#include <memory>
#include <vector>

using namespace tinytensor;

// NOLINTNEXTLINE
TEST_CASE("LSTM shapes") {
    auto device = kCPU;
    const int L = 3;
    const int B = 5;
    const int input_size = 10;
    const int hidden_size = 4;
    {
        int num_layers = 2;
        nn::LSTM lstm(input_size, hidden_size, nn::LSTMOptions{.num_layers = num_layers}, kF64, device);
        Tensor x = uniform_real(0, 1, {L, input_size});
        Tensor h = uniform_real(0, 1, {num_layers, hidden_size});
        Tensor c = uniform_real(0, 1, {num_layers, hidden_size});
        auto output = lstm.forward(x, {h, c});
        CHECK_EQ(output.output.shape(), Shape{L, hidden_size});
        CHECK_EQ(output.h.shape(), Shape{num_layers, hidden_size});
        CHECK_EQ(output.c.shape(), Shape{num_layers, hidden_size});
    }
    {
        int num_layers = 2;
        nn::LSTM lstm(
            input_size,
            hidden_size,
            nn::LSTMOptions{.num_layers = num_layers, .bidirectional = true},
            kF64,
            device
        );
        Tensor x = uniform_real(0, 1, {L, input_size});
        Tensor h = uniform_real(0, 1, {2 * num_layers, input_size});
        Tensor c = uniform_real(0, 1, {2 * num_layers, input_size});
        auto output = lstm.forward(x);
        CHECK_EQ(output.output.shape(), Shape{L, 2 * hidden_size});
        CHECK_EQ(output.h.shape(), Shape{2 * num_layers, hidden_size});
        CHECK_EQ(output.c.shape(), Shape{2 * num_layers, hidden_size});
    }
    {
        int num_layers = 2;
        nn::LSTM lstm(
            input_size,
            hidden_size,
            nn::LSTMOptions{.num_layers = num_layers, .batch_first = true, .bidirectional = true},
            kF64,
            device
        );
        Tensor x = uniform_real(0, 1, {B, L, input_size});
        auto output = lstm.forward(x);
        CHECK_EQ(output.output.shape(), Shape{B, L, 2 * hidden_size});
        CHECK_EQ(output.h.shape(), Shape{2 * num_layers, B, hidden_size});
        CHECK_EQ(output.c.shape(), Shape{2 * num_layers, B, hidden_size});
    }
}

// NOLINTNEXTLINE
TEST_CASE("LSTM bi-directional backward") {
    auto device = kCPU;
    nn::LSTM lstm(10, 4, nn::LSTMOptions{.num_layers = 2, .bidirectional = true}, kF64, device);
    Tensor w_ih_0(
        std::vector<double>{
            -0.0110273629, 0.4496437120,  -0.4325307600, 0.0831371682,  -0.1046908823, 0.1865393935,  -0.3069622465,
            0.4934508980,  -0.3651906409, -0.0749483927, 0.2800714526,  0.0091079949,  0.4137806382,  -0.0046508497,
            0.3762909847,  0.3313519985,  0.0319369631,  -0.1166303486, -0.1452982959, -0.4279842733, 0.1881083984,
            0.4712836833,  0.0591800956,  -0.4917630720, 0.4856449418,  0.2748873002,  -0.4078385419, -0.3342603768,
            -0.1481180440, -0.1300875463, -0.3193060996, 0.4088366627,  0.1922502961,  -0.4492668405, 0.0408595693,
            0.4848138500,  0.4775153382,  0.2147797354,  -0.1124489740, -0.3635820685, 0.1744212867,  0.4072850056,
            -0.1801296567, -0.1765566844, 0.3587380054,  -0.1708250923, -0.2964810165, -0.2791241688, 0.4375332973,
            0.4764103552,  0.4379762770,  0.0390989790,  -0.4029037959, 0.1096908884,  0.0511335026,  0.0503378557,
            0.3985380033,  0.3359937238,  -0.1174723650, -0.2715878821, -0.3504483078, 0.1746944388,  0.3175582331,
            -0.0017026604, 0.2919808564,  -0.3624582992, -0.2783685151, -0.3251962059, -0.1482114950, 0.1775899850,
            -0.0759026767, 0.2671603514,  0.1900564731,  0.3530741897,  -0.3947034554, -0.2107732699, -0.1708539908,
            -0.2526404206, 0.0077011028,  -0.0084099056, -0.1475468731, 0.2590151440,  0.1776777034,  0.1540270751,
            0.2752445019,  0.4858144846,  -0.2885372960, 0.3237681235,  0.2883087850,  0.0738387433,  0.2295331470,
            -0.0907971031, 0.2854972036,  0.2994068846,  -0.1831565509, 0.0693572683,  0.2940968615,  0.1058118628,
            -0.4207878653, 0.2321428491,  0.2867047176,  -0.2035641884, -0.4942512780, -0.1027412053, 0.1659881449,
            0.0999864062,  0.2899257882,  0.0909109828,  0.0328164365,  -0.4660206513, -0.0129547471, -0.3803641796,
            -0.0248616255, -0.4889643356, 0.2833435364,  -0.4417613546, 0.3545953492,  -0.0010748705, 0.3300447944,
            -0.1787681589, 0.2313247210,  0.1970589319,  0.4297362234,  0.4708374373,  -0.4712283147, -0.0210248538,
            -0.4235826489, -0.4922719065, -0.3801493117, 0.3352824391,  0.2123088660,  0.0153390432,  -0.1888607099,
            0.1591474688,  -0.1324066900, -0.4263955044, -0.1577832515, -0.4794324643, -0.3064330972, -0.0928600309,
            0.4813065679,  0.1577697797,  -0.0971149319, -0.4556832111, 0.1270856244,  0.1334576552,  -0.1508821541,
            -0.2865559202, -0.3044756552, 0.4991783595,  0.4070971034,  0.3561142455,  0.1188516359,  0.2491061783,
            0.0382870378,  0.0990788349,  0.2957255339,  0.1999316831,  -0.0347467180, 0.0598831966
        },
        {16, 10},
        device,
        true
    );
    Tensor w_ih_1(
        std::vector<double>{
            0.4428203264,  0.4859448429,  -0.2884948682, -0.2039675059, 0.0652942528,  0.0589672287,  -0.2043997105,
            0.4100052237,  0.4902186898,  -0.3767648969, 0.3569720643,  0.4620421030,  0.3825972350,  -0.1283775596,
            0.0119878916,  -0.3527557599, -0.0998537531, 0.2370606416,  0.1053349012,  0.1627292804,  0.4503004735,
            -0.0465758268, -0.4459323466, 0.4979689717,  -0.2362706384, 0.0290372825,  0.1974259964,  0.4078234837,
            -0.1459388118, 0.2843123400,  0.1344221606,  -0.4451563105, -0.1004119981, 0.0800725456,  0.0057018391,
            -0.1416979620, 0.1865550669,  0.0746566753,  -0.4187259615, 0.0560400399,  0.3920408559,  -0.1358818483,
            0.0428960906,  -0.3786981820, -0.2241515195, 0.2756767843,  0.4273533183,  0.3179002815,  0.0140039432,
            -0.3292040366, -0.4952021304, -0.3621295139, -0.1887630403, 0.0657400746,  0.3543739301,  -0.1791333585,
            0.1697912204,  -0.2293580837, 0.3586530659,  0.1149154585,  -0.4044115687, 0.0223083330,  -0.1335431924,
            -0.1346099603, -0.0193785185, -0.4856273809, 0.1879262906,  -0.3769762026, -0.4962609431, -0.2099726834,
            0.3854040203,  -0.1865048319, 0.4901983821,  0.4573008552,  0.4287671525,  -0.4850960566, -0.3678461440,
            0.2855457482,  0.3610345337,  -0.2937404235, -0.0794148668, -0.2087093652, -0.1039746749, -0.0231520646,
            -0.0844151637, -0.3832721738, -0.4692702953, -0.4332657846, -0.0943808515, -0.2959903782, 0.2018683713,
            -0.1087615376, -0.4611073907, -0.0719273928, -0.1377190843, -0.2883561055, 0.1460154413,  0.1494233102,
            -0.3446402331, -0.1250433050, -0.1663455228, 0.3208974846,  -0.3662735806, -0.3336947522, -0.4543339633,
            -0.2828903875, 0.2741787779,  0.1724490431,  0.0102389152,  0.0925609587,  -0.3379885964, 0.1979421609,
            0.4591791163,  -0.3941543211, 0.3236367238,  -0.4399578134, -0.3091339606, 0.2995542096,  -0.4819133622,
            0.3343311291,  -0.3637728943, 0.2502139201,  -0.3030467592, -0.0828465405, -0.2833432093, 0.1337362483,
            -0.3065622219, -0.1449224058
        },
        {16, 8},
        device,
        true
    );
    Tensor w_ih_0_reverse(
        std::vector<double>{
            0.2420237485,  0.3821427253,  -0.2501254279, -0.1436986432, 0.4599875331,  -0.3330647975, -0.3978764408,
            0.2697759870,  -0.2573628957, 0.4919310322,  -0.0424232445, 0.2884239270,  -0.3783885038, 0.1999761931,
            -0.2640915275, -0.0331613178, 0.3426693064,  -0.1999202730, 0.0365273948,  -0.3679563957, -0.0237144090,
            0.0472389283,  0.0109341610,  -0.3504881808, 0.3357127429,  -0.2006456354, 0.3875302650,  0.0478359028,
            -0.1539889012, -0.0947747816, -0.3055177378, 0.4383176249,  -0.4330106872, 0.0764446376,  -0.1934737371,
            -0.2017173613, -0.3732068836, 0.0802464507,  0.4956871356,  -0.0086050300, 0.3988953207,  0.2835938637,
            0.3450111754,  0.0354406763,  -0.1110220052, 0.0617471173,  0.1681179702,  0.1321708943,  0.4878178631,
            -0.1283480459, -0.2041895077, -0.1641012652, 0.0353024644,  -0.2489203022, 0.0540628808,  -0.3646199358,
            -0.1444868104, 0.4593491976,  0.0880353906,  0.4379638364,  -0.3163099117, 0.2398095408,  0.4506249541,
            -0.2982049990, -0.3888203257, 0.3855916374,  0.0081394145,  -0.0619611326, 0.0856851728,  -0.1087853299,
            -0.2454464567, 0.2328080765,  -0.1296355298, -0.0558785868, 0.0368805925,  -0.2137296443, 0.1215931191,
            -0.0112899398, 0.4462691988,  -0.4469190884, -0.4945998989, -0.1618421255, -0.0907301396, -0.3350775176,
            -0.3270443915, 0.3320471150,  0.1869680216,  -0.4726072125, 0.4515845790,  -0.1389286209, -0.0401916209,
            -0.2408402219, -0.3720037761, -0.1346429938, -0.1487923315, -0.0489988842, -0.4570367510, 0.3126057142,
            0.4338656345,  -0.0136071203, -0.0850631149, -0.4853108162, 0.1926943416,  0.0030298143,  -0.4112237627,
            0.1361075019,  0.4937545793,  0.4812876746,  -0.2161732228, -0.2874965171, 0.4936019683,  -0.2838994787,
            0.4895617647,  0.1612782234,  0.2105574990,  0.4626535856,  0.1861751052,  -0.0702944584, 0.2723554854,
            -0.3250934807, -0.2786784441, -0.4336886804, 0.2963820676,  0.1170898213,  -0.1041011243, -0.2826214178,
            0.3449034124,  -0.0128518531, 0.1791358349,  -0.1167698771, 0.4405242942,  0.4480454006,  0.1620410155,
            -0.1206806506, 0.1609433294,  0.2722502210,  -0.2923486893, 0.3400944909,  0.4317361475,  -0.2719424695,
            0.2898435059,  0.4581083039,  0.4578718490,  -0.1361532439, 0.1605438010,  0.0108236055,  0.3736295664,
            0.2305661926,  -0.0230157815, 0.1329312455,  -0.4009859382, -0.2147155530, -0.0556387166, -0.2221964913,
            0.4976397803,  -0.2305198985, -0.2705469989, 0.3486072291,  -0.2450539196, 0.0425109252
        },
        {16, 10},
        device,
        true
    );
    Tensor w_ih_1_reverse(
        std::vector<double>{
            -4.5754300466e-01, 9.7111787188e-03,  2.3891803596e-01,  -1.9073281223e-01, -3.7413320783e-01,
            3.6449888371e-01,  -4.0222886839e-01, 3.6135327956e-01,  1.7529149000e-02,  1.9863605465e-01,
            2.1928375811e-01,  -3.8695401790e-01, 2.0502730305e-01,  2.8544051692e-01,  4.3758426524e-01,
            2.4609933068e-01,  4.5806138904e-01,  7.6429068038e-02,  -2.9148405417e-01, 1.2086603997e-02,
            -2.4318135283e-01, 3.5897232723e-01,  1.9211272629e-01,  -2.6251994699e-01, -4.5762047393e-01,
            2.7848117783e-01,  3.5391450898e-01,  1.5568508787e-01,  -2.2231442356e-01, -2.0272546017e-01,
            3.1198561195e-01,  4.6884388883e-02,  1.8936646379e-01,  -3.5710806262e-03, 2.2717534086e-01,
            -1.2420629922e-01, 4.2232185562e-01,  -2.5000100660e-01, -4.9133341004e-01, 2.2637264144e-01,
            3.6454069705e-01,  2.2003856974e-01,  -3.2960174878e-02, 3.1816607261e-01,  -1.8566390908e-01,
            -2.3949175868e-01, 1.8167270990e-01,  -8.6599010559e-02, 4.7573282953e-01,  -3.9459903049e-01,
            1.5806214621e-01,  2.2379711640e-01,  -4.2780799700e-01, 4.8264849469e-01,  2.0959982850e-01,
            -1.4805202007e-01, 2.2495222174e-01,  4.3867911291e-01,  1.2399609616e-01,  4.9196490593e-01,
            6.3117291747e-02,  2.4023579138e-01,  -5.8243632721e-02, -1.6931365063e-02, -4.9272288793e-01,
            8.6392450979e-02,  3.7340654800e-01,  -3.8483074657e-01, -4.6898280658e-01, 1.0993625020e-01,
            8.8346265775e-02,  4.2155721125e-01,  -1.7557830273e-01, -1.6166527575e-01, -4.3081298719e-01,
            -3.6178871428e-01, 2.1750715319e-02,  -1.5762599101e-01, 2.6075540377e-01,  3.5476815942e-01,
            3.5984591219e-01,  -4.8297691651e-01, -4.3000667140e-01, -1.7020940564e-01, -5.2841816060e-02,
            -7.8224579988e-02, -4.5520251651e-01, 3.4832209139e-01,  -4.3231404447e-01, 2.4471996746e-01,
            3.1645823264e-01,  1.7196000743e-01,  -4.1935521904e-01, 3.2608814326e-02,  1.1262493868e-01,
            -2.0070102610e-01, 2.0005278490e-01,  3.4277069472e-01,  1.2985561089e-01,  -3.1716518664e-01,
            1.2004854601e-01,  -4.2331497460e-01, -3.4403012974e-01, 2.6455789513e-04,  1.5988721888e-01,
            -2.3815815503e-01, 1.6807773553e-01,  -2.0685171071e-01, -1.3872425177e-01, -4.3096484703e-01,
            -2.8462769408e-01, -1.0777595882e-01, -2.9348783396e-01, -4.5081177818e-02, 3.8910747808e-01,
            -2.4819965050e-01, 3.7611186692e-01,  2.7639325408e-01,  -1.4106820560e-01, 6.1158138001e-03,
            -2.3184074709e-02, -4.6052984367e-01, -3.3682516561e-01, -2.8609579207e-01, -1.3949530821e-01,
            1.1954413998e-02,  -2.4672675131e-01, -1.1611651579e-01
        },
        {16, 8},
        device,
        true
    );
    Tensor w_hh_0(
        std::vector<double>{-0.3486216465, -0.0721445352, 0.1046896563,  0.4009533384,  -0.2407294819, 0.3824548676,
                            0.0567163833,  -0.3205617804, -0.1279662444, -0.0196287067, -0.3769291912, -0.4568406778,
                            -0.1573128459, -0.0771295166, 0.4395107789,  -0.4582100946, -0.4011179939, 0.3075611075,
                            0.0489566304,  -0.0851015356, 0.4184543242,  -0.4480011949, 0.2172962054,  0.2265218889,
                            -0.1909151329, 0.0178976479,  0.2589575218,  0.0891941707,  0.3223021593,  0.0826789067,
                            0.1930368127,  -0.1435915520, -0.1676906208, -0.3046312780, 0.0482878546,  0.3667325737,
                            0.3327639639,  0.4938602537,  -0.3985259793, -0.0709060773, -0.4950861026, 0.1010862806,
                            0.0522476507,  0.0562388372,  0.2598421382,  -0.0943789403, -0.0752583655, -0.4693281602,
                            -0.3436216178, -0.4171229418, 0.4978832749,  -0.1905440016, -0.3332757211, -0.4245595477,
                            -0.1476743055, -0.2274310034, -0.0755349189, -0.4686610779, 0.3678197988,  0.1246919855,
                            0.3221977857,  -0.1238593835, -0.3871424054, -0.3329775434},
        {16, 4},
        device,
        true
    );
    Tensor w_hh_1(
        std::vector<double>{
            -2.0582366603e-01, -3.3887121667e-01, -2.5687576803e-02, 3.7344314813e-01,  4.6778941394e-01,
            -4.8042924641e-01, 4.5035701087e-01,  3.8577576329e-01,  -4.5354774070e-01, 3.4176643140e-01,
            -4.5737190483e-01, -4.6663868616e-01, -3.8117434629e-02, -4.5726637908e-01, -4.0346731968e-01,
            -9.4317890750e-02, 3.6255255895e-01,  -7.4064163019e-03, 2.8415900664e-01,  -3.3552368831e-01,
            -4.1515273305e-01, -1.1912478207e-01, 2.1950951251e-01,  1.8804475700e-01,  5.5155489952e-02,
            -3.7145195977e-01, -5.4898761105e-02, 4.9341876346e-01,  -4.1817428651e-01, 4.2832462391e-01,
            3.7193365972e-01,  -9.3306723334e-02, 7.2357494239e-02,  -2.2154668719e-01, -3.7440659229e-01,
            -3.0138889980e-01, 1.9304957389e-01,  -3.4466424174e-01, 4.1077941413e-01,  -6.8259476721e-02,
            4.0762855647e-01,  1.0808008151e-01,  -3.4027503633e-01, 4.9649592709e-03,  -3.6061680004e-01,
            -1.7883258562e-01, -5.2902019764e-02, -2.9096405375e-01, 4.0490920435e-01,  4.8559251565e-01,
            -1.0114506760e-01, 1.8820511271e-01,  5.5110191858e-06,  -2.7204363750e-01, -2.6617832297e-01,
            -4.8249518494e-01, -1.9891162689e-01, -2.5688967918e-01, 1.9959840195e-01,  3.7192131823e-01,
            -1.4130887355e-04, -2.3000097609e-01, -4.2656206822e-01, 4.8904491795e-01
        },
        {16, 4},
        device,
        true
    );
    Tensor w_hh_0_reverse(
        std::vector<double>{0.3835906450,  0.4247878363,  0.3488132087,  -0.2543863709, 0.3679578867,  0.2669199959,
                            0.0474955731,  -0.3361837624, -0.1049684320, 0.3383246100,  -0.0205625412, -0.4962227862,
                            -0.4233806582, -0.3246398141, 0.2452176356,  -0.0127951278, -0.2177057970, 0.1843710834,
                            0.0988695913,  0.4521877789,  -0.2578428782, -0.1812160253, -0.3286347204, 0.0103110833,
                            0.2532429372,  0.4571359432,  -0.4753955971, -0.2644038101, -0.1228383326, -0.1776408212,
                            -0.1394510860, -0.4654370960, -0.1401814745, 0.1839682532,  -0.0403706518, 0.4879259372,
                            -0.1202094795, 0.3112477131,  0.2834693096,  -0.2820924749, -0.0926541687, -0.3827468329,
                            0.2057701195,  0.0399478283,  -0.3133783215, 0.4700625691,  0.3821139732,  -0.4641156705,
                            0.4629628391,  0.4564223627,  -0.3553787717, -0.4386329447, -0.0126262613, -0.2820792474,
                            0.4871877217,  0.3063933582,  0.2727938388,  -0.0171148005, 0.1928890468,  0.4373987093,
                            0.3202634563,  -0.2037954864, -0.2761729366, 0.2521774109},
        {16, 4},
        device,
        true
    );
    Tensor w_hh_1_reverse(
        std::vector<double>{0.4212368280,  -0.3122327590, 0.2634054845,  0.1159047661,  -0.0597870946, -0.0445880781,
                            0.3756621794,  0.3213778617,  0.3301358494,  -0.1116374584, -0.3272486175, 0.1802533932,
                            0.1773674653,  -0.3478003948, -0.1105523173, -0.2179894683, -0.0078072901, 0.3059614636,
                            -0.0301904380, 0.0650163075,  -0.1105490090, -0.2412774074, -0.3237241193, 0.3188618683,
                            0.1501224037,  0.0880499855,  -0.0824887664, -0.1006297120, -0.0621686137, 0.4615465113,
                            0.0009598725,  -0.2236517385, 0.2928036368,  0.3400898825,  0.4975973046,  -0.2294235592,
                            0.4710736796,  0.1617129843,  0.2561999602,  -0.3214269291, -0.0656444054, -0.1166491039,
                            0.0782319232,  0.3069124060,  -0.1129632298, 0.2683706225,  -0.2366999786, -0.1918853948,
                            -0.2229741187, 0.2959142564,  0.4097071262,  -0.1920447014, 0.2470858372,  -0.1573880137,
                            -0.1012202020, 0.2811571823,  -0.2761628268, 0.1161393145,  -0.1359331560, 0.3955358562,
                            0.3904626688,  0.3907029226,  -0.3079390814, -0.0942567889},
        {16, 4},
        device,
        true
    );
    Tensor b_ih_0(
        std::vector<double>{
            -0.4813031680,
            -0.2801697908,
            -0.1696692439,
            0.2303325422,
            -0.1908545898,
            -0.0967610147,
            0.1743129486,
            0.4931815623,
            0.3717664508,
            0.4155147591,
            -0.1728707515,
            0.3364530409,
            -0.2690284960,
            -0.2943389245,
            -0.3245513883,
            -0.0104836137
        },
        {16},
        device,
        true
    );
    Tensor b_ih_1(
        std::vector<double>{
            -0.4205066376,
            0.1211979154,
            -0.1800723087,
            -0.1956443718,
            0.3875560766,
            0.2227473473,
            0.0740752411,
            -0.0866153792,
            0.0187143787,
            0.3260729728,
            0.1242955601,
            0.3219374251,
            0.0816792471,
            -0.0882862482,
            0.3824593564,
            -0.4998839277
        },
        {16},
        device,
        true
    );
    Tensor b_ih_0_reverse(
        std::vector<double>{
            0.4655111836,
            0.2689371083,
            0.3202935376,
            -0.1794614190,
            0.1874451225,
            0.0301268278,
            -0.3311173738,
            -0.4273918956,
            0.3150315072,
            0.1183683496,
            0.2751131068,
            -0.1794389587,
            -0.2117441628,
            -0.0379324877,
            -0.3547431004,
            -0.1504504674
        },
        {16},
        device,
        true
    );
    Tensor b_ih_1_reverse(
        std::vector<double>{
            0.3598677695,
            -0.2239555528,
            -0.4546671594,
            -0.1195507346,
            -0.1076747867,
            -0.1210493843,
            -0.0870910446,
            0.4641296367,
            0.1880262047,
            -0.4171851543,
            0.3485764197,
            -0.4874723436,
            0.4540900092,
            0.3364090460,
            0.0827942125,
            -0.2141438961
        },
        {16},
        device,
        true
    );
    Tensor b_hh_0(
        std::vector<double>{
            -0.4822017424,
            -0.4769477003,
            -0.1968488581,
            0.0516775535,
            0.4929189760,
            -0.1608433192,
            0.0820665100,
            0.3065723378,
            0.0243138490,
            -0.3804998864,
            0.2688015890,
            0.1599552781,
            0.4907236293,
            0.3325995898,
            -0.1886637656,
            0.3181134986
        },
        {16},
        device,
        true
    );
    Tensor b_hh_1(
        std::vector<double>{
            0.4305110361,
            0.2489675713,
            -0.4788273672,
            -0.1804193430,
            -0.2610022372,
            0.4723920872,
            -0.2280952737,
            -0.0759684425,
            0.1228703006,
            -0.3067980500,
            -0.0320659732,
            0.4565245723,
            0.3599468925,
            -0.4284547215,
            -0.3028148764,
            0.3225644554
        },
        {16},
        device,
        true
    );
    Tensor b_hh_0_reverse(
        std::vector<double>{
            0.3174788410,
            -0.4554925281,
            -0.2270506717,
            -0.3104975321,
            -0.0224118641,
            -0.1634244783,
            0.0309768205,
            -0.3866779548,
            0.0225000196,
            0.4703164619,
            -0.1735297648,
            -0.0604088696,
            -0.3512035545,
            -0.2086395836,
            0.2865429944,
            -0.1424210227
        },
        {16},
        device,
        true
    );
    Tensor b_hh_1_reverse(
        std::vector<double>{
            0.3316972966,
            0.3123236013,
            -0.4746520519,
            0.2812912959,
            -0.4170934787,
            0.3944078017,
            0.0129677087,
            -0.3321885879,
            -0.2079899278,
            0.1884770468,
            0.4301421037,
            -0.0455638436,
            -0.3125663050,
            0.2696132607,
            -0.4286593543,
            0.4117412173
        },
        {16},
        device,
        true
    );
    lstm.weights_ih.clear();
    lstm.weights_ih.push_back(std::make_shared<Tensor>(w_ih_0.permute({1, 0})));
    lstm.weights_ih.push_back(std::make_shared<Tensor>(w_ih_1.permute({1, 0})));
    lstm.weights_ih_reverse.clear();
    lstm.weights_ih_reverse.push_back(std::make_shared<Tensor>(w_ih_0_reverse.permute({1, 0})));
    lstm.weights_ih_reverse.push_back(std::make_shared<Tensor>(w_ih_1_reverse.permute({1, 0})));
    lstm.weights_hh.clear();
    lstm.weights_hh.push_back(std::make_shared<Tensor>(w_hh_0.permute({1, 0})));
    lstm.weights_hh.push_back(std::make_shared<Tensor>(w_hh_1.permute({1, 0})));
    lstm.weights_hh_reverse.clear();
    lstm.weights_hh_reverse.push_back(std::make_shared<Tensor>(w_hh_0_reverse.permute({1, 0})));
    lstm.weights_hh_reverse.push_back(std::make_shared<Tensor>(w_hh_1_reverse.permute({1, 0})));
    lstm.biases_ih.clear();
    lstm.biases_ih.push_back(std::make_shared<Tensor>(b_ih_0));
    lstm.biases_ih.push_back(std::make_shared<Tensor>(b_ih_1));
    lstm.biases_ih_reverse.clear();
    lstm.biases_ih_reverse.push_back(std::make_shared<Tensor>(b_ih_0_reverse));
    lstm.biases_ih_reverse.push_back(std::make_shared<Tensor>(b_ih_1_reverse));
    lstm.biases_hh.clear();
    lstm.biases_hh.push_back(std::make_shared<Tensor>(b_hh_0));
    lstm.biases_hh.push_back(std::make_shared<Tensor>(b_hh_1));
    lstm.biases_hh_reverse.clear();
    lstm.biases_hh_reverse.push_back(std::make_shared<Tensor>(b_hh_0_reverse));
    lstm.biases_hh_reverse.push_back(std::make_shared<Tensor>(b_hh_1_reverse));
    Tensor x(
        std::vector<double>{
            0.40552099, 0.53272209, 0.37362827, 0.47835793, 0.62588921, 0.22680077, 0.98989827, 0.79317048, 0.52491096,
            0.52219429, 0.39511743, 0.39646217, 0.71928758, 0.53643917, 0.76351164, 0.42057593, 0.00275104, 0.70850611,
            0.56164295, 0.62800029, 0.95502570, 0.03247582, 0.49755528, 0.78658307, 0.69435999, 0.06371662, 0.17942021,
            0.40106260, 0.62920572, 0.78331607, 0.39146551, 0.95106855, 0.38190589, 0.79865087, 0.16467445, 0.85551767,
            0.51995575, 0.28778764, 0.06395404, 0.72306560, 0.83355451, 0.78362683, 0.19138122, 0.39985727, 0.49470455,
            0.50640585, 0.46992822, 0.17278670, 0.22393732, 0.46315068, 0.52167762, 0.55331183, 0.02867861, 0.97760802,
            0.39284889, 0.23998774, 0.22218402, 0.84290535, 0.06032607, 0.57941201, 0.61783610, 0.58698944, 0.32288694,
            0.52838999, 0.90528307, 0.51430005, 0.47301558, 0.86635738, 0.02015154, 0.25542170, 0.39032942, 0.74938017,
            0.60104747, 0.15862677, 0.69853356, 0.72138419, 0.39831749, 0.73881310, 0.54589457, 0.96416395, 0.97720520,
            0.20109011, 0.84477785, 0.02349001, 0.62334513, 0.48539447, 0.82661819, 0.52766115, 0.88651339, 0.51098889,
            0.44454778, 0.75536919, 0.99911529, 0.28720473, 0.38677424, 0.14373095, 0.62323554, 0.08063257, 0.31976749,
            0.72787893
        },
        {2, 5, 10},
        device
    );

    Tensor expected_output(
        std::vector<double>{0.0381799618,  0.0195393966,  -0.0047592615, 0.1266968320,  -0.0055912712, -0.1475123702,
                            0.1039591146,  -0.1859921114, 0.0372062169,  0.0209484639,  0.0062081508,  0.1211784716,
                            0.0033538559,  -0.1259428551, 0.1129246597,  -0.2092032239, 0.0227314275,  0.0165804766,
                            0.0118958098,  0.1266849615,  -0.0037226099, -0.1378667450, 0.1127232249,  -0.2045897417,
                            0.0668531364,  0.0485593454,  0.0092436424,  0.1038529118,  -0.0098030853, -0.1008074375,
                            0.1124373238,  -0.2244348600, 0.0241631822,  0.0168620667,  0.0231238379,  0.1167754574,
                            -0.0320361685, -0.1428266385, 0.1099110414,  -0.2128076802, 0.0459358384,  0.0575117203,
                            0.0046386429,  0.1714669889,  -0.0297226450, -0.1066330962, 0.0821500893,  -0.1364906390,
                            0.0399100791,  0.0439342237,  0.0064006040,  0.1631922340,  -0.0204297169, -0.0971960818,
                            0.0763146888,  -0.1327220244, 0.0020711520,  0.0155125748,  0.0198207129,  0.1634917934,
                            -0.0486154341, -0.0922708971, 0.0832402037,  -0.1466510167, 0.0255425263,  0.0409672714,
                            0.0027369742,  0.1450897392,  -0.0418214883, -0.0974057747, 0.0710886041,  -0.1305258888,
                            -0.0034199345, 0.0129801239,  0.0287728727,  0.1565466946,  -0.0609788287, -0.0939137595,
                            0.0780046072,  -0.1444939357},
        {2, 5, 8},
        device
    );

    Tensor expected_w_ih_0_grad(
        std::vector<double>{
            -1.7680289371e-01, -4.2077316175e-02, -8.4821198103e-03, -1.3845442835e-01, -2.2987877782e-02,
            -6.2778093140e-03, -2.0924069773e-03, 2.1602477123e-03,  -1.1271903215e-01, -1.0869278325e-01,
            2.4209373728e-01,  -1.4689674118e+00, -1.2628737641e-01, -4.9366154873e-02, -9.6629773157e-03,
            -6.8662022450e-02, -1.7783270184e-01, -4.1975093885e-02, -1.4128823324e-02, -2.6150180319e-02,
            -2.0794149875e-02, -5.9071447199e-03, -8.0235199700e-04, -2.8595210695e-02, -1.0578742438e-01,
            -9.9828544806e-02, 2.1202632082e-01,  -1.5581556791e+00, -1.2278656338e-01, -4.6705846349e-02,
            -1.4035586360e-02, -4.0494522927e-02, -1.3685761404e-01, -3.3718209816e-02, -1.8868370703e-02,
            -1.3466910808e-01, -2.2018402699e-02, -6.0313851234e-03, -1.3135685106e-03, 1.0610648558e-02,
            -7.7103954114e-02, -8.7135767636e-02, 1.7248725965e-01,  -1.2235586798e+00, -1.0287132452e-01,
            -4.2007923367e-02, -1.8813246316e-02, -6.6770430676e-02, -1.6819943437e-01, -3.9074287736e-02,
            -1.3331951312e-02, -2.4454091069e-02, -1.5077300652e-02, -4.2980928802e-03, -3.1941965665e-04,
            -3.6110724355e-02, -9.9913057024e-02, -9.2343032612e-02, 1.9658825999e-01,  -1.3005483817e+00,
            -1.0618874868e-01, -3.9512775174e-02, -1.1693080913e-02, -3.0318470900e-02, -1.6945296506e-01,
            -3.7796402600e-02, -1.0890885491e-02, -1.4536221137e-01, -2.1911787333e-02, -5.9279612837e-03,
            -2.2782117896e-03, -1.1992731137e-02, -9.5949775394e-02, -1.0385065814e-01, 2.1617202165e-01,
            -1.4861766796e+00, -1.2926816924e-01, -4.5064230091e-02, -1.2521812249e-02, -7.5859038382e-02,
            -1.3233421879e-01, -3.0213071691e-02, -1.1575582189e-02, -2.2539606429e-02, -1.4370263544e-02,
            -4.1026029989e-03, -1.7035086285e-03, -7.6281914429e-03, -7.1605084722e-02, -7.4371460141e-02,
            1.6313852538e-01,  -1.1444966138e+00, -9.3448657399e-02, -3.4882716560e-02, -1.2253954744e-02,
            -2.6133954494e-02, -1.3074024317e-01, -3.4503884606e-02, -4.3943975151e-03, -1.2030131054e-01,
            -2.0039780350e-02, -5.4097012312e-03, -1.6306809299e-03, 6.9891012136e-03,  -8.4959120118e-02,
            -8.1696305059e-02, 1.6631009207e-01,  -1.1980276962e+00, -9.9020344282e-02, -4.0508551019e-02,
            -5.9806880121e-03, -6.2973341152e-02, -1.5967815328e-01, -3.5625862560e-02, -9.7677026463e-03,
            -1.0227365173e-01, -2.1480647420e-02, -6.1191607742e-03, -2.1283254298e-03, -2.7402934981e-02,
            -8.5040089219e-02, -9.2889472229e-02, 1.7774046040e-01,  -1.3694817122e+00, -1.3176813694e-01,
            -4.3297759621e-02, -1.1216061767e-02, -6.7834807993e-02, -1.0534434360e-01, -2.4393296293e-02,
            -9.9167953043e-03, -1.4585056484e-01, -1.3621501395e-02, -4.0067244689e-03, -1.3655844908e-03,
            1.6748622452e-02,  -5.9642981079e-02, -6.9429217786e-02, 1.4758072748e-01,  -9.1154955727e-01,
            -7.4418768706e-02, -2.9029476003e-02, -1.0705869951e-02, -6.0849089712e-02, -1.8937315585e-01,
            -4.4091024678e-02, -2.0297003431e-02, -9.4214032300e-02, -2.1795176341e-02, -6.5417263394e-03,
            -8.4903948876e-04, -1.9562350348e-02, -1.0841341008e-01, -1.0961494323e-01, 2.3201500836e-01,
            -1.5839618888e+00, -1.2927341816e-01, -4.9506124317e-02, -1.9448358044e-02, -6.0706496779e-02
        },
        {10, 16},
        device
    );
    Tensor expected_w_ih_1_grad(
        std::vector<double>{
            2.2205915556e-02,  1.8817534590e-02,  1.1182983786e-02,  1.1303738714e-01,  8.6688703275e-03,
            4.3716655475e-03,  1.7734722148e-03,  2.5695479237e-02,  6.6996426326e-01,  3.8517719904e-01,
            3.2270031179e-01,  1.8575854348e-01,  1.9412031681e-02,  3.2065891762e-02,  7.9292505176e-03,
            1.1870250825e-01,  1.0308888248e-02,  8.8763797436e-03,  5.5274637643e-03,  5.7531015727e-02,
            4.7764899839e-03,  2.5408579538e-03,  1.0327153880e-03,  1.2972297057e-02,  3.4031754668e-01,
            1.9796294884e-01,  1.6412815838e-01,  9.5592541450e-02,  9.5073508303e-03,  1.6044162681e-02,
            4.0410470599e-03,  6.0448046535e-02,  -2.1086540774e-03, -2.2126017465e-03, -2.1393475817e-03,
            -1.6592635640e-02, -1.1477357546e-03, -6.9203577637e-04, -7.2470450629e-04, -4.6696720326e-03,
            -1.0098031067e-01, -5.7320352446e-02, -4.9098328141e-02, -2.8241470400e-02, -1.8124841699e-03,
            -3.3764857775e-03, -2.0247914054e-03, -1.8583478288e-02, -9.0496580085e-05, 1.0483716811e-03,
            2.6255373441e-03,  6.3289506746e-02,  7.6896710474e-03,  4.4803176658e-03,  1.8541046027e-03,
            1.9032619338e-02,  3.5238783452e-01,  2.3091456256e-01,  1.7743951746e-01,  1.1364131415e-01,
            5.1898200794e-03,  1.3633943689e-02,  3.7001074202e-03,  7.7283428317e-02,  -1.9350291095e-02,
            -1.2121118141e-02, -5.4708482482e-03, -8.1902837880e-02, -3.4598986138e-03, -1.5505630014e-03,
            -4.1698277473e-04, -1.0469132461e-02, -4.7223767181e-01, -2.7630262441e-01, -2.2299091175e-01,
            -1.2786216702e-01, -1.3642862994e-02, -1.7525205253e-02, -3.2596423592e-03, -7.1971398072e-02,
            8.7767182828e-03,  5.5353373529e-03,  1.4641808551e-03,  3.8570210274e-02,  2.2265667475e-03,
            1.1169421540e-03,  -4.2106051014e-05, 5.3672387379e-03,  2.2075593039e-01,  1.3023483609e-01,
            1.0471222388e-01,  6.1187059948e-02,  6.7156466523e-03,  9.1838912450e-03,  6.8753499637e-04,
            3.4960986358e-02,  -9.4899780902e-04, -1.0046467876e-03, -6.1127057310e-03, -1.8440094983e-02,
            1.0356473937e-03,  6.8871444550e-04,  -4.1950103980e-04, -1.0899255630e-03, -1.1282268156e-01,
            -6.1870903439e-02, -5.2940248403e-02, -2.4417941430e-02, 5.8035901293e-04,  1.0506157516e-03,
            -3.5537961214e-03, -1.2363036223e-02, 8.2164066911e-03,  5.3220427815e-03,  3.2324365319e-03,
            3.9830409410e-02,  2.1145709729e-03,  1.2218874966e-03,  5.4831590603e-04,  5.5418627659e-03,
            2.3319220984e-01,  1.3695076926e-01,  1.1062979196e-01,  6.3812947261e-02,  6.0943473699e-03,
            8.0337881827e-03,  2.1836992277e-03,  3.5589813541e-02
        },
        {8, 16},
        device
    );
    Tensor expected_w_ih_0_reverse_grad(
        std::vector<double>{
            7.4027793125e-02,  -5.5537898768e-03, -1.7315461551e-02, -1.4695574163e-02, 2.3240661945e-02,
            -4.0408833128e-04, -4.4598494159e-03, -2.7964344990e-03, -9.1784583984e-01, -4.9152880614e-02,
            6.5032719341e-01,  -4.0194354135e-02, 2.7759020689e-01,  -2.9127246167e-03, -1.4844076483e-02,
            -1.4706520817e-02, 6.4843184617e-02,  -2.3408261094e-03, -2.4809751539e-02, -1.1242534636e-02,
            2.0002017885e-02,  -3.7360548441e-04, 3.0297539452e-03,  -2.0868272207e-03, -8.6185356327e-01,
            -4.6082839273e-02, 6.0453858840e-01,  -3.8294908854e-02, 2.2865297375e-01,  -1.1352030266e-03,
            -1.0287632320e-02, -1.0995182219e-02, 5.0490067081e-02,  -2.9605069423e-03, -1.7976724854e-02,
            -1.2106354961e-02, 2.1662244487e-02,  -4.7471613484e-04, 1.1808168879e-03,  -2.1425972394e-03,
            -8.8214063333e-01, -4.5412961184e-02, 5.7934361475e-01,  -3.0053047709e-02, 2.0552568016e-01,
            -1.2561767201e-03, -9.2553488481e-03, -1.1203953361e-02, 7.2431729784e-02,  -4.0135039569e-03,
            -2.0438504031e-02, -1.4428911206e-02, 2.4518801011e-02,  -6.4685022329e-04, 1.0487960171e-03,
            -2.7356464372e-03, -6.3101657034e-01, -3.5138103758e-02, 4.9297629099e-01,  -4.1681600246e-02,
            2.8071620847e-01,  -2.7363245602e-03, -1.1155255127e-02, -1.5406459768e-02, 7.5321202764e-02,
            -5.5619341423e-03, -1.5499956999e-02, -1.5948781658e-02, 2.9058895249e-02,  -4.4778565911e-04,
            -2.2086442879e-03, -2.5841947523e-03, -8.7273040830e-01, -4.4035785629e-02, 6.3323183845e-01,
            -4.1315761308e-02, 3.0199105568e-01,  -2.8706194619e-03, -1.0795337736e-02, -1.5145776444e-02,
            4.5384350353e-02,  -3.4499220065e-03, -1.3480705178e-02, -8.3567845100e-03, 1.3700638476e-02,
            -3.5156217942e-04, 3.6313797333e-03,  -1.7975773437e-03, -6.5057881024e-01, -3.5124180841e-02,
            4.5442192846e-01,  -2.7269400516e-02, 1.6305777163e-01,  -1.6133980442e-03, -5.9218342330e-03,
            -8.2365173531e-03, 5.0036501616e-02,  -2.5746952344e-03, 1.6123652579e-03,  -9.3272233655e-03,
            2.2275267663e-02,  -3.4540140535e-04, 3.0012528420e-04,  -1.1738854156e-03, -8.0144520852e-01,
            -4.1539720953e-02, 5.5288383497e-01,  -2.9203881159e-02, 1.9373716160e-01,  -1.1940505770e-03,
            1.0763182565e-03,  -8.4233803441e-03, 7.7533648101e-02,  -6.5235162218e-03, -3.9238379422e-03,
            -1.3787763756e-02, 2.8449749062e-02,  -5.0326874384e-04, 1.1176090425e-03,  -1.9914378042e-03,
            -7.9403019768e-01, -4.0592271273e-02, 5.8881106646e-01,  -4.0200486515e-02, 2.9830367499e-01,
            -3.5870866549e-03, -2.0960653377e-03, -1.2785239654e-02, 3.8062671192e-02,  -4.2297248822e-03,
            -8.2011281860e-03, -1.1776792496e-02, 2.2805304566e-02,  -3.8929244955e-04, -1.8192066365e-03,
            -1.8885443361e-03, -6.6203325417e-01, -3.0444100877e-02, 4.3524234665e-01,  -2.8137465913e-02,
            1.8298262774e-01,  -2.1076368334e-03, -6.8045326774e-03, -1.1542832046e-02, 7.2227942861e-02,
            -4.5629013954e-03, -3.0405734108e-02, -1.6170653324e-02, 2.6679207298e-02,  -6.3287170552e-04,
            5.5600092114e-04,  -2.8690763655e-03, -9.8574303300e-01, -4.8737920604e-02, 6.6297078288e-01,
            -4.4798081787e-02, 2.8166813227e-01,  -2.4782840906e-03, -1.5691253421e-02, -1.6077836721e-02
        },
        {10, 16},
        device
    );
    Tensor expected_w_ih_1_reverse_grad(
        std::vector<double>{
            -1.8709684686e-02, -1.0008819401e-01, 1.1724407613e-01,  -1.1584522147e-01, -6.5219142649e-03,
            -1.5203964307e-02, 1.1614504109e-02,  -1.9375694181e-02, 7.4157220880e-01,  6.8370242061e-01,
            1.3768008047e-01,  3.6442788755e-01,  -2.3054582764e-02, -7.0315068817e-02, 1.0157818394e-01,
            -1.1602596199e-01, -9.9713972699e-03, -5.1766755128e-02, 5.9417751226e-02,  -5.8365965918e-02,
            -3.4574035602e-03, -7.6290705383e-03, 5.9399856559e-03,  -9.8327691284e-03, 3.7975967029e-01,
            3.4869051731e-01,  7.1324234355e-02,  1.8770015198e-01,  -1.2211528989e-02, -3.6327868936e-02,
            5.1490020842e-02,  -5.8958002730e-02, 4.7123613153e-03,  1.5387056167e-02,  -1.9893244523e-02,
            1.9985886394e-02,  4.8032820273e-04,  1.8460946259e-03,  -1.2605204494e-03, 2.2495507605e-03,
            -1.2035468856e-01, -1.1272801691e-01, -2.0915021939e-02, -5.5493654157e-02, 4.8325478490e-03,
            9.6441738480e-03,  -1.5909643925e-02, 1.7297432740e-02,  -1.6673447863e-02, -7.3864016697e-02,
            7.2410584533e-02,  -6.5684855652e-02, -8.5649230320e-04, -4.4596812847e-03, 4.2935958343e-03,
            -6.1479772968e-03, 4.5608191570e-01,  4.1838568741e-01,  9.4459776494e-02,  2.4494678018e-01,
            -1.7204568746e-02, -4.7146603553e-02, 5.7277641830e-02,  -5.7936744176e-02, 5.0506534825e-03,
            5.6715735092e-02,  -6.4896199214e-02, 6.5463142395e-02,  5.5086702515e-03,  1.4872187616e-02,
            -1.1809993610e-02, 1.9223505068e-02,  -4.3816368703e-01, -3.8355725712e-01, -7.8653398110e-02,
            -2.2628056059e-01, 8.4359411579e-03,  4.9570747227e-02,  -6.7958909016e-02, 8.3585600790e-02,
            -2.0679112338e-03, -2.7920987658e-02, 3.1327064519e-02,  -3.0978108506e-02, -2.0985974283e-03,
            -6.6667006745e-03, 5.3180051812e-03,  -8.6322566503e-03, 2.0871861887e-01,  1.8476779639e-01,
            3.9262761517e-02,  1.1026419896e-01,  -3.3795558405e-03, -2.3962833758e-02, 3.2255678098e-02,
            -3.8627674256e-02, 1.8580747677e-03,  9.2425753851e-03,  -1.2821787308e-02, 1.4704526381e-02,
            2.7702314163e-03,  3.7686009892e-03,  -3.4041336245e-03, 5.6968151444e-03,  -8.4977658404e-02,
            -6.3217714801e-02, -7.6343210626e-03, -3.3526908915e-02, 3.5953815753e-03,  8.8307619466e-03,
            -1.4937470702e-02, 2.0217607096e-02,  -3.9746811655e-03, -2.8385350881e-02, 3.3545155916e-02,
            -3.3990513352e-02, -2.7354731023e-03, -6.9988514103e-03, 5.4978870728e-03,  -9.0616877318e-03,
            2.2565116837e-01,  1.9886523144e-01,  4.0154224194e-02,  1.1276478478e-01,  -5.6292840492e-03,
            -2.3822316877e-02, 3.3710295214e-02,  -4.1438637982e-02
        },
        {8, 16},
        device
    );

    Tensor expected_w_hh_0_grad(
        std::vector<double>{
            -1.4005997799e-02, -4.0354225225e-03, -1.0925582501e-03, -1.7522271770e-02, -5.1499731788e-03,
            -1.3949211448e-03, -4.3299722075e-04, 6.2593691778e-04,  -8.5622783136e-03, -9.0980468030e-03,
            1.3152007918e-02,  -1.3622043100e-01, -1.9253605025e-02, -7.2614795280e-03, -1.5064451912e-03,
            -1.2035382795e-02, -7.3275107623e-03, -2.0204449648e-03, -7.8253573367e-04, -7.6799425219e-03,
            -2.5157163213e-03, -7.1979894296e-04, -1.5837761046e-04, -4.9735947183e-04, -4.3348688337e-03,
            -4.5397268990e-03, 6.6092933429e-03,  -7.0038004233e-02, -9.6398426045e-03, -3.5828900432e-03,
            -9.3333684205e-04, -5.9549655105e-03, 1.2435148108e-03,  3.1151352640e-04,  -2.6857457704e-04,
            4.1547648733e-03,  5.3616481243e-04,  1.1599707216e-04,  2.0022784799e-04,  -1.4668045519e-03,
            3.9126502672e-04,  1.0253351979e-03,  -1.9209878678e-03, 1.5031246975e-02,  2.5511209930e-03,
            8.1321383310e-04,  -5.1891411382e-05, 1.6275124265e-03,  -1.0405998022e-02, -1.7426938147e-03,
            -8.0640134814e-04, 2.1494217499e-02,  -1.1038768779e-03, -4.4821540987e-04, 3.4875241916e-04,
            -1.7734674286e-02, -5.4413380154e-03, -2.8257016025e-03, 2.2633897842e-03,  -7.5200128208e-02,
            -9.9413085117e-03, -1.8298751895e-03, -4.3727716130e-04, 9.9774905368e-04
        },
        {4, 16},
        device
    );
    Tensor expected_w_hh_1_grad(
        std::vector<double>{2.5286383242e-04, 1.3419059854e-03, 7.4952148720e-04,  1.0756585412e-02, 2.1090118837e-03,
                            1.1818272861e-03, 3.4058657762e-04, 4.9438867590e-03,  6.3587791329e-02, 3.8672817007e-02,
                            3.2581093927e-02, 2.0561218368e-02, 1.8212370482e-03,  4.7906889549e-03, 8.1227859258e-04,
                            1.6117911777e-02, 3.6431297127e-05, 7.6333717296e-04,  4.8187277294e-04, 6.9330517020e-03,
                            1.3895483881e-03, 8.0193824361e-04, 2.4532206584e-04,  3.1757392897e-03, 4.1087497447e-02,
                            2.5213173233e-02, 2.1073483796e-02, 1.3410145623e-02,  1.0983751835e-03, 2.9819303486e-03,
                            5.4653639175e-04, 1.0368313624e-02, -2.5323909631e-04, 6.4778613905e-05, 3.8534344994e-04,
                            2.6011966208e-03, 3.7158962013e-04, 2.2891416738e-04,  1.9543855257e-04, 1.1979841337e-03,
                            1.5568065146e-02, 9.6999184025e-03, 8.0188667740e-03,  4.9927985884e-03, 8.4506501537e-05,
                            5.6530383275e-04, 4.4239531432e-04, 3.8145999543e-03,  7.7928044405e-04, 4.2403228688e-03,
                            3.4964371881e-03, 3.4352479730e-02, 5.5485507537e-03,  2.9154241633e-03, 1.2377602779e-03,
                            1.6017282247e-02, 2.0288420623e-01, 1.2140690267e-01,  1.0400578532e-01, 6.3561844218e-02,
                            4.8521421501e-03, 1.3492657001e-02, 3.4838557024e-03,  5.1352641522e-02},
        {4, 16},
        device
    );
    Tensor expected_w_hh_0_reverse_grad(
        std::vector<double>{
            -3.6247093134e-03, 2.9407836357e-04,  9.2475397631e-04,  2.0971096490e-03,  -4.9446075834e-03,
            7.0644668463e-05,  -6.2555482315e-05, 3.1981284456e-04,  4.2135351178e-02,  1.3681432192e-03,
            -3.6500499828e-02, 4.9247989366e-03,  -2.8970943297e-02, 2.1054308319e-04,  4.6585767337e-04,
            2.3035709834e-03,  2.0191032728e-03,  -1.2456957823e-04, 3.9243677014e-04,  -1.0580419447e-03,
            2.5821943660e-03,  -7.5705768845e-05, 3.8337259570e-04,  -1.3587145107e-04, -2.2756934788e-02,
            -8.0543902642e-04, 1.8800501163e-02,  -2.2494264764e-03, 1.5130035779e-02,  -1.2463552357e-04,
            4.8791805484e-04,  -1.1355319573e-03, -1.2248614381e-03, 8.0594574620e-05,  1.3983013262e-03,
            3.7065844603e-04,  -1.1217098201e-04, -3.6835452470e-05, 1.4126993088e-03,  3.8233515959e-05,
            2.4755272626e-03,  -3.4647824484e-04, -1.5977126300e-03, 5.1154083963e-04,  -4.5702537801e-03,
            4.4676092884e-05,  1.6721118000e-03,  3.8760416874e-04,  1.9817143674e-03,  -1.3440475694e-04,
            -1.8635444054e-03, -9.5303037454e-04, 1.4932431661e-03,  -4.2811375230e-05, 1.3902576847e-04,
            -2.2307563376e-04, -2.2882320466e-02, -1.1669398239e-03, 1.8617245988e-02,  -2.2584087650e-03,
            1.2074681721e-02,  -9.8016073281e-05, -1.0581257623e-03, -1.1297586582e-03
        },
        {4, 16},
        device
    );
    Tensor expected_w_hh_1_reverse_grad(
        std::vector<double>{-0.0002605683, 0.0073376907,  -0.0097253062, 0.0111287106,  0.0021953746,  0.0045707592,
                            -0.0036235285, 0.0059672544,  -0.0752098155, -0.0595773231, -0.0111382309, -0.0365482171,
                            0.0011480036,  0.0096545168,  -0.0137972957, 0.0198272025,  -0.0008480674, 0.0173703476,
                            -0.0232955128, 0.0265935574,  0.0046215574,  0.0111414871,  -0.0086700936, 0.0142816817,
                            -0.1798535208, -0.1439162770, -0.0272936795, -0.0895206098, 0.0019993640,  0.0234217597,
                            -0.0334226508, 0.0475769027,  0.0006848921,  -0.0141005568, 0.0186690815,  -0.0212559534,
                            -0.0037452936, -0.0089016736, 0.0069710996,  -0.0114693546, 0.1442981639,  0.1149627251,
                            0.0218499358,  0.0719384637,  -0.0016204746, -0.0188747225, 0.0268126662,  -0.0381298074,
                            -0.0011870084, 0.0248491410,  -0.0330833251, 0.0377277120,  0.0067028564,  0.0157371623,
                            -0.0123235757, 0.0202952670,  -0.2555033105, -0.2036293075, -0.0385316050, -0.1267830019,
                            0.0029543740,  0.0332465337,  -0.0474073964, 0.0675023891},
        {4, 16},
        device
    );

    Tensor expected_b_ih_0_grad(
        std::vector<double>{
            -3.0530309780e-01,
            -7.1661914272e-02,
            -2.3212572006e-02,
            -1.7003117511e-01,
            -3.7618852880e-02,
            -1.0546939821e-02,
            -2.4122383441e-03,
            -2.5198463421e-02,
            -1.8105508605e-01,
            -1.8056161780e-01,
            3.8035182988e-01,
            -2.5915528360e+00,
            -2.1667167214e-01,
            -8.1759642208e-02,
            -2.3680426036e-02,
            -1.0448996389e-01
        },
        {16},
        device
    );
    Tensor expected_b_ih_1_grad(
        std::vector<double>{
            0.1463781692,
            0.1089680932,
            0.0663531003,
            0.7334030940,
            0.0476502815,
            0.0254364182,
            0.0106284881,
            0.1338870927,
            4.3155554192,
            2.5149113603,
            2.0627152232,
            1.1917669898,
            0.1180716714,
            0.1774324295,
            0.0459711416,
            0.7126121307
        },
        {16},
        device
    );
    Tensor expected_b_ih_0_reverse_grad(
        std::vector<double>{
            1.2358095103e-01,
            -7.7318632430e-03,
            -3.2882628673e-02,
            -2.4982713291e-02,
            4.4598653724e-02,
            -8.5570989818e-04,
            -1.6946268329e-04,
            -4.4143613064e-03,
            -1.5366869953e+00,
            -8.0444943651e-02,
            1.0895757288e+00,
            -7.1443791535e-02,
            4.7611114329e-01,
            -4.1517004598e-03,
            -1.8967744482e-02,
            -2.4645329862e-02
        },
        {16},
        device
    );
    Tensor expected_b_ih_1_reverse_grad(
        std::vector<double>{
            -0.0996441209,
            -0.5891406682,
            0.6864547680,
            -0.6853539230,
            -0.0480023580,
            -0.1141286461,
            0.0890014173,
            -0.1467320121,
            4.4725284267,
            4.0333932239,
            0.8173710109,
            2.2206702659,
            -0.1305604140,
            -0.4509015181,
            0.6385068101,
            -0.7578002423
        },
        {16},
        device
    );

    Tensor expected_b_hh_0_grad(
        std::vector<double>{
            -3.0530309780e-01,
            -7.1661914272e-02,
            -2.3212572006e-02,
            -1.7003117511e-01,
            -3.7618852880e-02,
            -1.0546939821e-02,
            -2.4122383441e-03,
            -2.5198463421e-02,
            -1.8105508605e-01,
            -1.8056161780e-01,
            3.8035182988e-01,
            -2.5915528360e+00,
            -2.1667167214e-01,
            -8.1759642208e-02,
            -2.3680426036e-02,
            -1.0448996389e-01
        },
        {16},
        device
    );
    Tensor expected_b_hh_1_grad(
        std::vector<double>{
            0.1463781692,
            0.1089680932,
            0.0663531003,
            0.7334030940,
            0.0476502815,
            0.0254364182,
            0.0106284881,
            0.1338870927,
            4.3155554192,
            2.5149113603,
            2.0627152232,
            1.1917669898,
            0.1180716714,
            0.1774324295,
            0.0459711416,
            0.7126121307
        },
        {16},
        device
    );
    Tensor expected_b_hh_0_reverse_grad(
        std::vector<double>{
            1.2358095103e-01,
            -7.7318632430e-03,
            -3.2882628673e-02,
            -2.4982713291e-02,
            4.4598653724e-02,
            -8.5570989818e-04,
            -1.6946268329e-04,
            -4.4143613064e-03,
            -1.5366869953e+00,
            -8.0444943651e-02,
            1.0895757288e+00,
            -7.1443791535e-02,
            4.7611114329e-01,
            -4.1517004598e-03,
            -1.8967744482e-02,
            -2.4645329862e-02
        },
        {16},
        device
    );
    Tensor expected_b_hh_1_reverse_grad(
        std::vector<double>{
            -0.0996441209,
            -0.5891406682,
            0.6864547680,
            -0.6853539230,
            -0.0480023580,
            -0.1141286461,
            0.0890014173,
            -0.1467320121,
            4.4725284267,
            4.0333932239,
            0.8173710109,
            2.2206702659,
            -0.1305604140,
            -0.4509015181,
            0.6385068101,
            -0.7578002423
        },
        {16},
        device
    );

    auto output = lstm.forward(x).output;
    output.backward(ones_like(output));
    CHECK(allclose(output, expected_output));

    CHECK(allclose(lstm.weights_ih[0]->grad().value(), expected_w_ih_0_grad));
    CHECK(allclose(lstm.weights_ih[1]->grad().value(), expected_w_ih_1_grad));
    CHECK(allclose(lstm.weights_ih_reverse[0]->grad().value(), expected_w_ih_0_reverse_grad));
    CHECK(allclose(lstm.weights_ih_reverse[1]->grad().value(), expected_w_ih_1_reverse_grad));

    CHECK(allclose(lstm.weights_hh[0]->grad().value(), expected_w_hh_0_grad));
    CHECK(allclose(lstm.weights_hh[1]->grad().value(), expected_w_hh_1_grad));
    CHECK(allclose(lstm.weights_hh_reverse[0]->grad().value(), expected_w_hh_0_reverse_grad));
    CHECK(allclose(lstm.weights_hh_reverse[1]->grad().value(), expected_w_hh_1_reverse_grad));

    CHECK(allclose(lstm.biases_ih[0]->grad().value(), expected_b_ih_0_grad));
    CHECK(allclose(lstm.biases_ih[1]->grad().value(), expected_b_ih_1_grad));
    CHECK(allclose(lstm.biases_ih_reverse[0]->grad().value(), expected_b_ih_0_reverse_grad));
    CHECK(allclose(lstm.biases_ih_reverse[1]->grad().value(), expected_b_ih_1_reverse_grad));

    CHECK(allclose(lstm.biases_hh[0]->grad().value(), expected_b_hh_0_grad));
    CHECK(allclose(lstm.biases_hh[1]->grad().value(), expected_b_hh_1_grad));
    CHECK(allclose(lstm.biases_hh_reverse[0]->grad().value(), expected_b_hh_0_reverse_grad));
    CHECK(allclose(lstm.biases_hh_reverse[1]->grad().value(), expected_b_hh_1_reverse_grad));
}
