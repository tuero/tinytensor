function(CREATE_TEST TEST_NAME)
    add_executable(${TEST_NAME} ${TEST_NAME}.cpp)
    target_include_directories(${TEST_NAME} PRIVATE ${PROJECT_SOURCE_DIR}/external/doctest/)
    target_link_libraries(${TEST_NAME} tinytensor::tinytensor)
    # Disable clang-tidy for tests
    set_target_properties(${TEST_NAME} PROPERTIES CXX_CLANG_TIDY "")
    add_test(${TEST_NAME} ${TEST_NAME})
endfunction()

find_package(Torch QUIET)

if(Torch_FOUND)
    message("Building with Torch tests")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${TORCH_CXX_FLAGS}")
    add_compile_definitions(TT_TORCH)
    link_libraries(${TORCH_LIBRARIES})
else()
    message("Torch not found, skipping tests requiring Torch")
endif()

# OP tests
CREATE_TEST(test_binary)
CREATE_TEST(test_reduce)
CREATE_TEST(test_unary)
CREATE_TEST(test_unary_inplace)
CREATE_TEST(test_shape)
CREATE_TEST(test_clamp)
CREATE_TEST(test_clone)
CREATE_TEST(test_concat)
CREATE_TEST(test_creation)
CREATE_TEST(test_distribution)
CREATE_TEST(test_matmul)
CREATE_TEST(test_conv)
CREATE_TEST(test_to)
CREATE_TEST(test_to_vec)
CREATE_TEST(test_inplace_operator)
CREATE_TEST(test_index)
CREATE_TEST(test_misc)
CREATE_TEST(test_save_load)
CREATE_TEST(test_loss)
CREATE_TEST(test_optimizer)
CREATE_TEST(test_optimizer_save_load)

# Autograd OP tests
CREATE_TEST(test_unary_autograd)
CREATE_TEST(test_shape_autograd)
CREATE_TEST(test_to_autograd)
CREATE_TEST(test_reduce_autograd)
CREATE_TEST(test_misc_autograd)
CREATE_TEST(test_matmul_autograd)
CREATE_TEST(test_joining_autograd)
CREATE_TEST(test_index_autograd)
CREATE_TEST(test_conv_autograd)
CREATE_TEST(test_clamp_autograd)
CREATE_TEST(test_binary_autograd)
CREATE_TEST(test_grad_hook)
CREATE_TEST(test_grad_mode)
CREATE_TEST(test_retain_graph)

# Module tests
CREATE_TEST(test_rnn)
CREATE_TEST(test_lstm)
CREATE_TEST(test_gru)
CREATE_TEST(test_batchnorm)
CREATE_TEST(test_layernorm)
CREATE_TEST(test_instancenorm)

